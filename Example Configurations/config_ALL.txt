# All lines starting with '#' ignored by the program
# Do not change lines starting with '$' in any way

# Directory of database records to use
$RecordsDirectory
C:\Program Files (x86)\Steam\steamapps\common\Grim Dawn\database\records

# Directory of database records that override base game files. Use this option by removing #s if you want to modift another mod. This path should be the path of 'database\records' folder of mod
#$AdditionalRecordsDirectory
#C:\Program Files (x86)\Steam\steamapps\common\Grim Dawn\mods\MyCustomMod\database\records

# Directory where changed files should be put. If you created a new mod, use that directory.
# Giving path of 'records' folder also works.
$ModDirectory
C:\Program Files (x86)\Steam\steamapps\common\Grim Dawn\mods\test\database\records

#Subdirectories to scan for files. Limiting subdirectories helps with performance and preventing unexpected bugs.
#Do not change if you don't know what you are doing
$SubDirectories
creatures
game
items
proxies
interactive

#Subdirectories to scan for files in additional records directory. Limiting subdirectories helps with performance and preventing unexpected bugs.
#Keep it as is if you don't know what you are doing
#If the mod doesn't have its custom directories you can use same ones for the base files
#$AdditionalSubDirectories

## OPTIONAL ADDITIONAL MODS
# Remove '#' at start to add these mods.

# New Caravan & Inventory (Extreme Edition) by tt300: https://forums.crateentertainment.com/t/mod-new-caravan-inventory-extreme-edition-apply-to-gd-v1-1-9-0-gdx2/94922
#$AddCaravanExtreme

# Gives 5 inventory bags when you talk to Hangman Jarvis at the start.
# WARNING: This OVERRIDES 'Waking to Misery' quest and requires building quests through Asset Manager > Archive > Build...
#$AddInventoryBagsAtStart

$Commands

# Commands are run in order and multiple of same command is permitted. However, unless otherwise stated, a command OVERRIDES value set by a previous command
# Remove '#' at the start of the line to use a command

## PLAYER

# Adjusts the player run speed.
# Parameter 1 (Float): Run speed bonus caps are multiplied by this.
#AdjustRunSpeed 2.0

# Adjusts amount of gained XP on different difficulties.
# Parameter 1: Difficulty. Valid values: Normal, Elite, Ultimate, Challenge, All
# Parameter 2 (Float): Gained XP is multiplied by this
#AdjustExperienceGained All 0.66

# Sets the amount of gained XP on different difficulties equation to given value. Given example is default for Normal.
# Parameter 1: Difficulty. Valid values: Normal, Elite, Ultimate, Challenge, All
# Parameter 2 (String): Equation. WARNING: Be sure that there are no spaces in equation
#SetExperienceGainedEquation Normal (((monsterLevel*12.75-(averagePartyLevel*averagePartyLevel/50))+((monsterLevel-averagePartyLevel)*(averagePartyLevel/1.12)))*0.12)*(1+(monsterExperience/100))+3

# Adjusts amount of XP lost on death.
# Parameter 1 (Float): XP lost is multiplied by this
#AdjustDeathPenalty 0.66

# Sets the XP lost on death equation to given value. Given example is default.
# Parameter 1 (String): Equation. WARNING: Be sure that there are no spaces in equation
#SetDeathPenaltyEquation ((200*(playerLevel^2.25)))*(currentPlayerLevel/8000)

# Adjusts amount of required XP per level.
# Parameter 1 (Float): XP requirement is multiplied by this
# WARNING: Use 'AdjustExperienceGained' instead if possible as it gives more flexibility for future changes
#AdjustExpRequirement 0.66

# Sets the experience requirement equation to given value. Given example is default.
# Parameter 1 (String): Equation. WARNING: Be sure that there are no spaces in equation
# WARNING: Use 'SetExperienceGainedEquation' instead if possible as it gives more flexibility for future changes
#SetExperienceLevelEquation (((((playerLevel*playerLevel*playerLevel)^1.16)*32)+((playerLevel*playerLevel)*300))*0.1)+36

# Sets maximum level player can reach.
# Parameter 1 (Integer)
#SetMaxLevel 120

# Sets amount of attribute points gained per level.
# Parameter 1 (Integer)
#SetAttributePointsPerLevel 1

# Changes amount of skill points gained per level.
# Parameter 1 (Integer): Amount of change, added to original value. Can be negative.
#ChangeSkillPointsPerLevelBy -1

# Sets amount of skill points gained per level. Given example is default.
# Parameter 1: List of amounts per level separated by ';'. Be sure that there is no space between values.
#SetSkillPointPerLevel 3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1

# Sets maximum amount of devotion points player can have.
# Parameter 1 (Integer)
#SetMaxDevotionPoints 75

# Sets devotion point gained per shrine to given amount
# Parameter 1 (Integer)
#SetDevotionPointsPerShrine 2

# Sets amount of attribute gained per point spent.
# Parameter 1 (Integer): Amount of attribute gained per one attribute point (in default one attribute point gives 8)
#SetPhysiqueIncrementPerAttribute 8
#SetCunningIncrementPerAttribute 8
#SetSpiritIncrementPerAttribute 8

# Sets amount of life gained per attributes.
# Parameter 1 (Integer): Amount of life gained per one attribute point equal of (see above options) attributes. Examples are default values.
#SetLifeIncrementPerPhysique 20
#SetLifeIncrementPerCunning 8
#SetLifeIncrementPerSpirit 8

# Adjusts amount of energy gained per spirit.
# Parameter 1 (Integer): Amount of energy gained per 8 spirit is set to this. Example is the default value
#SetEnergyIncrementPerSpirit 16

# Adjusts amount of discount for faction markets. This affects all levels (both negative and positive levels).
# Parameter 1 (Float): Discount is multiplied by this
#AdjustFactionMarketDiscounts 0.75

# Set amount of required reputation for factions for specific level.
# Parameter 1 (Integer, 1-8): Level. There are 8 levels from worst to best. Level 4 is neutral.
# Parameter 2 (Integer): New discount. Can be negative. Percentage from base value.
#SetFactionMarketDiscount 7 15

# Adjusts amount of required reputation for factions. This affects all levels (both negative and positive levels).
# Parameter 1 (Float): Requirement is multiplied by this
#AdjustFactionRepRequirements 0.75

# Set amount of required reputation for factions for specific level.
# Parameter 1 (Integer, 1-8): Level. There are 8 levels from worst to best. Level 4 is neutral.
# Parameter 2 (Integer): New requirement. Can be negative.
#SetFactionRepRequirement 3 -100

# Changes the limit of stack for given item type. Can be used multiple times for different types.
# Parameter 1 (Integer): New stack limit
# Parameter 2: Item type. Valid values: Amulet, Armor, Belt, Blueprint, Component, Medal, Quest, Relic, Ring, Shield, Weapon
#SetItemStackLimit 300 Quest

## LOOT

# Adjusts amount of gold per loot
# Parameter 1 (Float): Gold amount is multiplied by this
#AdjustGoldDrop 3

# Adjusts amount of loot from given source
# Parameter 1 (Float): Amount is multiplied by this
# Parameter 2: Source of loot. Valid values: Chest, Enemy, All
#AdjustLootAmount 3.33333 Chest

# Adjusts amount of specific loot combination. Can be used multiple times to cover different combinations.
# Parameter 1 (Float): Amount is multiplied by this
# Parameter 2: List of item types. Separate values with ','. Valid values: Amulet, Armor, Belt, Blueprint, Component, Medal, Quest, Relic, Ring, Shield, Weapon
# Parameter 3: List of item classes (rarities). Separate values with ','. Valid values: Common, Magical, Rare, Epic, Legendary, Quest
# Parameter 4 (Boolean): Should types and classes be combined with AND or OR? AND makes it apply to loots satisfying both while OR requires only one to satisfy. Use 'True' for AND and 'False' for OR.
#AdjustSpecificLootAmount 1.333 Component,Amulet Quest,Rare True

# Adjusts weight of speficied prefix-suffix combination. Can be used multiple times to cover different combinations.
# Parameter 1 (Float): Weights of combinations multiplied by this
# Parameter 2: Type of prefix. Valid values: NoAffix, NormalAffix, RareAffix
# Parameter 3: Type of suffix. Valid values: NoAffix, NormalAffix, RareAffix
#AdjustAffixWeight 5 RareAffix RareAffix

## MONSTERS

# Adjusts chance of spawning from Champion pool (not necessarily champion! Could even be normal or hero).
# Parameter 1 (Float): Chance multiplied by this (Chance is percentage and limited to 0-100)
#AdjustChampionChance 1.5

# Adjusts amount of spawns from Champion pool.
# Parameter 1 (Float): Amount is multiplied by this (Remember 0 * x is still 0 (unless x = infinity))
#AdjustChampionSpawnAmount 2.5

# Adjusts min/max amount of spawns from Champion pool. Same with AdjustChampionSpawnAmount if both used with same values
# Parameter 1 (Float): Amount is multiplied by this (Remember 0 * x is still 0 (unless x = infinity))
#AdjustChampionSpawnMin 2.5
#AdjustChampionSpawnMax 2.5

# Adjusts amount of spawns from normal pool.
# Parameter 1 (Float): Amount is multiplied by this (Remember 0 * x is still 0 (unless x = infinity))
#AdjustCommonSpawnAmount 1.5

# Adjusts min/max amount of spawns from normal pool. Same with AdjustCommonSpawnAmount if both used with same values
# Parameter 1 (Float): Amount is multiplied by this (Remember 0 * x is still 0 (unless x = infinity))
#AdjustCommonSpawnMin 2.5
#AdjustCommonSpawnMax 2.5

# Adjusts amount of spawns. Same with calling AdjustChampionSpawnAmount and AdjustCommonSpawnAmount. This overrides previous calls to any of 3!
# Parameter 1 (Float): Amount is multiplied by this
#AdjustSpawnAmount 3.33

# Adjusts weight of given monster class. This changes probability of a class of monsters to be chosen from a pool.
# Parameter 1 (Float): Weight of class is multiplied by this
# Parameter 2: Monster class. Valid values: Common, Champion, Hero, Quest, Boss
#AdjustMonsterClassWeight 5.789 Hero

# Increases limit of given monster class by given amount. This is an upper limit. Most of heroes are limited to 1. Increasing allows more heroes (combined with AdjustChampionChance and AdjustChampionSpawnAmount). However you will see same heroes multiple times in a monster group. Note: Monster pool files with 'ignoreGameBalance' set to 1 is not affected by any changes. Those files are generally special files like quest bosses or aetherial crystals and changing them likely to cause unexpected/unwanted bugs and results.
# Parameter 1 (Integer): Limit is increased by this
# Parameter 2: Monster class. Valid values: Common, Champion, Hero, Quest, Boss
#IncreaseMonsterClassLimit 2 Hero

# Removes monster level limits to allow monsters to scale to player level. This affects almost every area in every difficulty!
#RemoveDifficultyLimits

# Changes maximum player level that a player will encounter given class of monster
# Parameter 1 (Integer): Max player level
# Parameter 2: Monster class. Valid values: Common, Champion, Hero, Quest, Boss
#SetMonsterClassMaxPlayerLevel 30 Common

# Changes minimum player level that a player will encounter given class of monster
# Parameter 1 (Integer): Min player level
# Parameter 2: Monster class. Valid values: Common, Champion, Hero, Quest, Boss
#SetMonsterClassMinPlayerLevel 30 Hero